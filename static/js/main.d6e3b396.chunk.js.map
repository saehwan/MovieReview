{"version":3,"sources":["components/MovieCard/MovieCard.js","components/Carousel/Swiper.js","screens/Home/Home.js","firebase-config.js","components/UseAuth.js","screens/MovieDetail/MovieDetail.js","screens/Login/Login.js","screens/Profile/Profile.js","components/Header/Header.js","App.js","index.js"],"names":["MovieCard","_ref","movie","selectMovie","_jsx","Link","to","concat","id","style","textDecoration","color","children","onClick","className","_jsxs","src","poster_path","original_title","release_date","vote_average","overview","slice","Swiper","_useState","useState","_useState2","_slicedToArray","popularMovies","setPopularMovies","useEffect","fetch","then","res","json","data","results","_Fragment","Carousel","showThumbs","autoPlay","transitionTime","infiniteLoop","showStatus","map","backdrop_path","Home","MOVIE_API","SEARCH_API","DISCOVER_API","movies","setMovies","_useState3","_useState4","searchKey","setSearchKey","_useState5","title","_useState6","setMovie","_useState7","_useState8","fetchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_yield$axios$get","wrap","_context","prev","next","preventDefault","axios","get","params","api_key","query","sent","stop","_x","apply","arguments","window","scrollTo","onSubmit","type","onInput","target","value","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","provider","GoogleAuthProvider","UseAuth","currentUser","setCurrentUser","unsubscribe","onAuthStateChanged","user","console","log","MovieDetail","useParams","trailer","setTrailer","setFavorites","inFavorite","setInFavorite","usersCollectionRef","collection","_callee2","getUsers","docSnap","_context2","_ref2","getDocs","docs","doc","_objectSpread","getDoc","uid","exists","getData","videos","find","vid","name","includes","key","addFavorite","_ref3","_callee3","_context3","setDoc","deleteFavorite","_ref4","_callee4","favoritesDoc","_context4","deleteDoc","tagline","class","vote_count","runtime","Youtube","videoId","genres","genre","homepage","href","imdb_id","production_companies","company","logo_path","Login","navigate","useNavigate","emailSignUp","setEmailSignUp","passwordSignUp","setPasswordSignUp","emailSignIn","setEmailSignIn","passwordSignIn","setPasswordSignIn","getRedirectResult","Signup","email","password","userCredential","createUserWithEmailAndPassword","t0","SignIn","signInWithEmailAndPassword","signInWithGoogle","signInWithRedirect","displayName","photoURL","googleAuth","logout","_ref5","_callee5","_context5","signOut","alert","placeholder","my","onChange","e","m","Profile","changed","setChanged","users","setUsers","showFavorites","Header","App","BrowserRouter","Routes","Route","exact","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6e3b396.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport './MovieCard.css'\r\nconst MovieCard = ({movie, selectMovie}) => {\r\n    return (\r\n        <Link \r\n            to={`/movie/${movie.id}`} style={{textDecoration:\"none\", color:\"white\"}}>\r\n            <div onClick={() => selectMovie(movie)} className={\"movie\"}>\r\n                <div className=\"cards\">\r\n                <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie?movie.poster_path:\"\"}`} />\r\n                <div className=\"cards__overlay\">\r\n                    <div className=\"card__title\">{movie?movie.original_title:\"\"}</div>\r\n                    <div className=\"card__runtime\">\r\n                        {movie?movie.release_date:\"\"}\r\n                        <span className=\"card__rating\">{movie?movie.vote_average:\"\"}<i className=\"fas fa-star\" /></span>\r\n                    </div>\r\n                    <div className=\"card__description\">{movie ? movie.overview.slice(0,118)+\"...\" : \"\"}</div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\n\r\nexport default MovieCard;","import React, { useEffect, useState } from \"react\"\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Swiper.css'\r\nconst Swiper = () => {\r\n\r\n    const [ popularMovies, setPopularMovies ] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=2d30858c3b61b7bbbb750cb8e4f86e30&language=en-US\")\r\n        .then(res => res.json())\r\n        .then(data => setPopularMovies(data.results))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"poster\">\r\n                <Carousel\r\n                    showThumbs={false}\r\n                    autoPlay={true}\r\n                    transitionTime={3}\r\n                    infiniteLoop={true}\r\n                    showStatus={false}\r\n                >\r\n                    {\r\n                        popularMovies.map(movie => (\r\n                            <Link style={{textDecoration:\"none\",color:\"white\"}} to={`/movie/${movie.id}`} key={movie.id} >\r\n                                <div className=\"posterImage\">\r\n                                    <img src={`https://image.tmdb.org/t/p/original${movie && movie.backdrop_path}`} />\r\n                                </div>\r\n                                <div className=\"posterImage__overlay\">\r\n                                    <div className=\"posterImage__title\">{movie ? movie.original_title: \"\"}</div>\r\n                                    <div className=\"posterImage__runtime\">\r\n                                        {movie ? movie.release_date : \"\"}\r\n                                        <span className=\"posterImage__rating\">\r\n                                            {movie ? movie.vote_average :\"\"}\r\n                                            <i className=\"fas fa-star\" />{\" \"}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"posterImage__description\">{movie ? movie.overview : \"\"}</div>\r\n                                </div>\r\n                            </Link>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Swiper","import {useEffect, useState} from \"react\"\r\nimport '../../screens/Home/Home.css'\r\nimport axios from 'axios'\r\nimport MovieCard from \"../../components/MovieCard/MovieCard\"\r\nimport Swiper from '../../components/Carousel/Swiper'\r\n\r\nfunction Home() {\r\n    const MOVIE_API = \"https://api.themoviedb.org/3/\"\r\n    const SEARCH_API = MOVIE_API + \"search/movie\"\r\n    const DISCOVER_API = MOVIE_API + \"discover/movie\"\r\n    const API_KEY = \"2d30858c3b61b7bbbb750cb8e4f86e30\"\r\n\r\n    const [movies, setMovies] = useState([])\r\n    const [searchKey, setSearchKey] = useState(\"\")\r\n    const [movie, setMovie] = useState({title: \"Loading Movies\"})\r\n    const [value, setValue] = useState(\"\")\r\n    // fetch the movies when page first roaded\r\n    useEffect(() => {\r\n        fetchMovies()\r\n    }, [])\r\n\r\n    const fetchMovies = async (event) => {\r\n        if (event) {\r\n            event.preventDefault()\r\n        }\r\n\r\n        const {data} = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query: searchKey\r\n            }\r\n        })\r\n        setMovies(data.results)\r\n        setMovie(data.results[0])\r\n        setSearchKey(\"\")\r\n    }\r\n\r\n    const selectMovie = (movie) => {\r\n        setMovie(movie)\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const renderMovies = () => (\r\n        movies.map(movie => (\r\n            <MovieCard\r\n                selectMovie={selectMovie}\r\n                key={movie.id}\r\n                movie={movie}\r\n            />\r\n        ))\r\n    )\r\n\r\n    return (\r\n        <div className=\"Home\">          \r\n                <main>\r\n                    <Swiper/> \r\n                    <form className=\"form\" onSubmit={fetchMovies}>\r\n                        <input className=\"search\" type=\"text\" id=\"search\" \r\n                            onInput={(event) => setSearchKey(event.target.value)}/>\r\n                        <button className=\"submit-search\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n                        \r\n                    </form>\r\n                    <div className={\"center-max-size container\"}>\r\n                        {renderMovies()}\r\n                    </div>\r\n                </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\r\nimport {getFirestore} from 'firebase/firestore'\r\nimport firebase from 'firebase/compat/app'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDew-TKwfdIO3q1sZ4P-1BlVVelVktDTfo\",\r\n    authDomain: \"movie-review-a4dd2.firebaseapp.com\",\r\n    projectId: \"movie-review-a4dd2\",\r\n    storageBucket: \"movie-review-a4dd2.appspot.com\",\r\n    messagingSenderId: \"329380250954\",\r\n    appId: \"1:329380250954:web:f96d0d6d8c41b830706db3\",\r\n    measurementId: \"G-M31YBM5RD0\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n//export const firestore = firebase.firestore();\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const provider = new GoogleAuthProvider();","import { useEffect, useState } from 'react';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../firebase-config';\r\n\r\nconst UseAuth = () => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n         const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n              if (user) {\r\n                   setCurrentUser(user)\r\n              } else {\r\n                   setCurrentUser(null);\r\n              }\r\n         })\r\n\r\n         console.log(\"~~~~~~~~~~~~~~~~Auth being hit!~~~~~~~~~~~~~~~~~~~~~\")\r\n         // * cleanup;\r\n         return unsubscribe;\r\n    }, [])\r\n\r\n    return currentUser;\r\n}\r\n\r\nexport default UseAuth","import React, {useEffect, useState, useId} from \"react\"\r\nimport \"./MovieDetail.css\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport Youtube from 'react-youtube'\r\nimport {db} from \"../../firebase-config\"\r\nimport { collection, getDoc, getDocs, doc, deleteDoc, setDoc} from \"firebase/firestore\";\r\nimport UseAuth from \"../../components/UseAuth\"\r\n\r\n\r\nconst MovieDetail = () => {\r\n    // pass the user info\r\n    const currentUser = UseAuth()\r\n\r\n    const [movie, setMovie] = useState()\r\n    const { id } = useParams() // \r\n    const [trailer, setTrailer] = useState('')\r\n\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [inFavorite, setInFavorite] = useState(false)\r\n\r\n    const usersCollectionRef = collection(db, \"users\");\r\n\r\n    useEffect(async ()=> {\r\n        if(currentUser){\r\n            const getUsers = async () => {\r\n                // use getDocs to bring date into collection \r\n                 const data = await getDocs(usersCollectionRef);\r\n                 // add data into exist data in the user, overwriting id \r\n                 setFavorites(data.docs.map((doc)=>({ ...doc.data(), id: doc.id})))\r\n            }\r\n            getUsers();\r\n            // check whether specific data is in the database or not\r\n            const docSnap = await getDoc(doc(db, `users/${currentUser.uid}/favoriteMovies`, id))\r\n            console.log(docSnap.data())\r\n            setInFavorite(!!docSnap.exists())\r\n        }}\r\n    )\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        console.log(movie)\r\n        window.scrollTo(0,0)\r\n    }, [currentUser])\r\n\r\n\r\n    useEffect(()=>{\r\n        if (movie) {\r\n            const trailer = movie.videos.results.find(vid => vid.name.includes(\"Official Trailer\") || vid.name.includes(\"Teaser\")).key\r\n            setTrailer(trailer ? trailer : movie.videos.results[0])\r\n        }\r\n    },[movie])\r\n\r\n   \r\n    const getData = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=2d30858c3b61b7bbbb750cb8e4f86e30&append_to_response=videos`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            setMovie(data)})\r\n        \r\n    }\r\n\r\n    const addFavorite = async () =>{\r\n        // with setDoc add data with specific key value in the collection.\r\n        await setDoc(doc(db, `users/${currentUser.uid}/favoriteMovies`, id), {\r\n            original_title: movie.original_title,\r\n            id:  movie.id,\r\n            poster_path: movie.poster_path,\r\n            release_date: movie.release_date,\r\n            vote_average: movie.vote_average,\r\n            overview: movie.overview\r\n        });\r\n        // state change for refreshing screen\r\n        setInFavorite(true)\r\n    }\r\n\r\n    const deleteFavorite = async(id) =>{\r\n        // find db collection with specific data id\r\n        const favoritesDoc = doc(db, `users/${currentUser.uid}/favoriteMovies`, id);\r\n        // delete data with deleteDoc\r\n        await deleteDoc(favoritesDoc);\r\n        // state change for refreshing screen\r\n        setInFavorite(false)\r\n\r\n    }\r\n    \r\n    return trailer==='' ? <div>sorry no movie information</div> : (\r\n        <div className=\"movie\">\r\n            <div className=\"movie__intro\">\r\n                <img className=\"movie__backdrop\" src={`https://image.tmdb.org/t/p/original${movie ? movie.backdrop_path : \"\"}`} />\r\n            </div>\r\n            <div className=\"movie__detail\">\r\n                <div className=\"movie__detailLeft\">\r\n                    <div className=\"movie__posterBox\">\r\n                        <img className=\"movie__poster\" src={`https://image.tmdb.org/t/p/original${movie ? movie.poster_path : \"\"}`} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie__detailRight\">\r\n                    <div className=\"movie__detailRightTop\">\r\n                        \r\n                        <div className=\"movie__name\">{movie ? movie.original_title : \"\"}</div>\r\n                        <div className=\"movie__tagline\">{movie ? movie.tagline : \"\"}</div>\r\n                        <div className=\"movie__rating\">\r\n                            {movie ? movie.vote_average: \"\"} <i class=\"fas fa-star\" />\r\n                            <span className=\"movie__voteCount\">{movie ? \"(\" + movie.vote_count + \") votes\" : \"\"}</span>\r\n                        </div>  \r\n                        <div className=\"movie__runtime\">{movie ? movie.runtime + \" mins\" : \"\"}</div>\r\n                        <div className=\"movie__releaseDate\">{movie ? \"Release date: \" + movie.release_date : \"\"}</div>\r\n                        <div>\r\n                            <Youtube\r\n                                videoId={trailer}\r\n                                    />\r\n                        </div>\r\n                        <div className=\"movie__genres\">\r\n                            {\r\n                                movie && movie.genres\r\n                                ? \r\n                                movie.genres.map(genre => (\r\n                                    <><span className=\"movie__genre\" id={genre.id}>{genre.name}</span></>\r\n                                )) \r\n                                : \r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"movie__detailRightBottom\">\r\n                        <div className=\"synopsisText\">Synopsis</div>\r\n                        <div>{movie ? movie.overview : \"\"}</div>\r\n                    </div>\r\n                    <div>\r\n                        {inFavorite ?\r\n                        <button className=\"Undo favorite\" onClick={()=>deleteFavorite(id)} >\r\n                                Delete movie\r\n                        </button>\r\n                            :\r\n                        <button className=\"favorite\" onClick={addFavorite}>\r\n                                Add to favorite list\r\n                        </button>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"movie__links\">\r\n                <div className=\"movie__heading\">Useful Links</div>\r\n                {\r\n                    movie && movie.homepage && <a href={movie.homepage} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__homeButton movie__Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n                {\r\n                    movie && movie.imdb_id && <a href={\"https://www.imdb.com/title/\" + movie.imdb_id} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__imdbButton movie__Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n            </div>\r\n            <div className=\"movie__heading\">Production companies</div>\r\n            <div className=\"movie__production\">\r\n                {\r\n                    movie && movie.production_companies && movie.production_companies.map(company => (\r\n                        <>\r\n                            {\r\n                                company.logo_path \r\n                                && \r\n                                <span className=\"productionCompanyImage\">\r\n                                    <img className=\"movie__productionComapany\" src={\"https://image.tmdb.org/t/p/original\" + company.logo_path}  />\r\n                                    <span>{company.name}</span>\r\n                                </span>\r\n                            }\r\n                        </>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetail","import React, { useState } from 'react'\r\nimport { signInWithRedirect, createUserWithEmailAndPassword, signOut, signInWithEmailAndPassword, getRedirectResult } from 'firebase/auth';\r\nimport { auth, db, provider } from \"../../firebase-config\";\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport {useEffect} from 'react'\r\nimport  UseAuth  from '../../components/UseAuth'\r\n\r\nconst Login = () => {\r\n     const navigate = useNavigate()\r\n\r\n     const currentUser = UseAuth()\r\n     // * Signup with email and password States\r\n     const [emailSignUp, setEmailSignUp] = useState('')\r\n     const [passwordSignUp, setPasswordSignUp] = useState('')\r\n\r\n     // * Signin with email and password States\r\n     const [emailSignIn, setEmailSignIn] = useState('')\r\n     const [passwordSignIn, setPasswordSignIn] = useState('')\r\n\r\n     useEffect(async () =>{\r\n          const result = await getRedirectResult(auth)\r\n          if (result) {\r\n               navigate(\"/\")\r\n          }\r\n     })\r\n     \r\n     // * Signup function with email and password\r\n     const Signup = async () => {\r\n          try {\r\n               const email = emailSignUp;\r\n               const password = passwordSignUp;\r\n\r\n               const userCredential = await createUserWithEmailAndPassword(auth, email, password)\r\n               const user = userCredential.user;\r\n\r\n               const usersCollectionRef = doc(db, 'users', user.uid);\r\n               await setDoc(usersCollectionRef, { email, password })\r\n\r\n               setEmailSignUp(\"\");\r\n               setPasswordSignUp(\"\");\r\n          } catch (error) {\r\n               console.log('error: ', error);\r\n          }\r\n     }\r\n\r\n     // * SignIn function with email and password\r\n     const SignIn = async () => {\r\n          try {\r\n               const email = emailSignIn;\r\n               const password = passwordSignIn;\r\n\r\n               const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n               const user = userCredential.user;\r\n\r\n               setEmailSignIn(\"\")\r\n               setPasswordSignIn(\"\")\r\n          } catch (error) {\r\n               console.log('error: ', error);\r\n          }\r\n     }\r\n\r\n     // * SignIn with Google\r\n     const signInWithGoogle = async () => {\r\n          try {\r\n               const userCredential = await signInWithRedirect(auth, provider)\r\n               const user = userCredential.user\r\n               const name = user.displayName;\r\n               const email = user.email;\r\n               const profilePic = user.photoURL;\r\n\r\n               const usersCollectionRef = doc(db, 'users', user.uid);\r\n               await setDoc(usersCollectionRef, { email, googleAuth: true });\r\n          } catch (error) {\r\n               console.log('error: ', error);\r\n          }\r\n     }\r\n\r\n     // * Logout\r\n     const logout = async () => {\r\n          try {\r\n               await signOut(auth);\r\n               alert(\"logout\")\r\n          } catch (error) {\r\n               console.log('error: ', error);\r\n          }\r\n     }\r\n\r\n     return (\r\n     <div className=\"Login\">\r\n     \r\n     <div>\r\n     <h3> Login </h3>\r\n          <input type='email' placeholder='Email' value={emailSignUp} my='2' onChange={e => setEmailSignUp(e.target.value)} />\r\n          <input type='password' placeholder='Password' my='2' value={passwordSignUp} onChange={e => setPasswordSignUp(e.target.value)} />\r\n     \r\n          <button onClick={Signup}>Sign Up</button>\r\n          <button my='2' onClick={signInWithGoogle}>Sign In Google</button>\r\n          </div>\r\n          <div>\r\n          <h3>Sign In</h3>\r\n          <input type='email' placeholder='Email' value={emailSignIn} my='2' onChange={e => setEmailSignIn(e.target.value)} />\r\n          <input type='password' placeholder='Password' my='2' value={passwordSignIn} onChange={e => setPasswordSignIn(e.target.value)} />\r\n          <button onClick={SignIn}>Sign In</button>\r\n          <button my='2' onClick={signInWithGoogle}>Sign In Google</button>\r\n          <button m='2' onClick={logout}>Logout</button>\r\n          </div>\r\n          <div>\r\n               {currentUser &&\r\n                    <>\r\n                         <p>{`Signed In as ${currentUser .email}`}</p>\r\n                         <button onClick={logout}>Sign Out</button>\r\n                    </>\r\n               }\r\n          </div>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport UseAuth from '../../components/UseAuth'\r\nimport { signOut } from 'firebase/auth';\r\nimport { auth } from \"../../firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { collection, getDocs, doc, deleteDoc} from \"firebase/firestore\";\r\nimport { db } from '../../firebase-config'\r\nimport { useState, useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport './Profile.css'\r\nfunction Profile() {\r\n    const navigate = useNavigate()\r\n    const currentUser = UseAuth()\r\n    const [changed, setChanged] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    \r\n    // 비동기로 데이터 받을준비\r\n    const getUsers = async () => {\r\n        // getDocs로 컬렉션안에 데이터 가져오기\r\n        if (currentUser) {\r\n            // const usersCollectionRef = collection(db, `users/${currentUser.uid}/likes`);\r\n            // console.log(currentUser)\r\n            const data = await getDocs(collection(db, `users/${currentUser.uid}/favoriteMovies`));\r\n            // data.forEach((doc) => {\r\n            //     console.log(doc.id, \" => \", doc.data())\r\n            // })\r\n            // users에 data안의 자료 추가. 객체에 id 덮어씌우는거\r\n            setUsers(data.docs.map((doc)=>({ ...doc.data(), id: doc.id})))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        setChanged(false)\r\n    }, [currentUser, changed])\r\n\r\n    const logout = async () => {\r\n        try {\r\n            await signOut(auth);\r\n            alert(\"logout\")\r\n            navigate(\"/movie/Login\")\r\n        } catch (error) {\r\n            console.log('error: ', error);\r\n        }\r\n    }\r\n\r\n    const deleteFavorite = async(id) =>{\r\n        // 내가 삭제하고자 하는 db의 컬렉션의 id를 뒤지면서 데이터를 찾는다\r\n        const favoritesDoc = doc(db, `users/${currentUser.uid}/favoriteMovies`, id);\r\n        // deleteDoc을 이용해서 삭제\r\n        await deleteDoc(favoritesDoc);\r\n        // 화면 업데이트를 위한 state 변경\r\n        await setChanged(true)\r\n        console.log(true)\r\n    }\r\n\r\n    const showFavorites = users.map((movie) => (\r\n        <div>\r\n            <Link \r\n                to={`/movie/${movie.id}`} style={{textDecoration:\"none\", color:\"white\"}}>\r\n                <div onClick={() => window.scrollTo(0, 0)} className={\"movie\"}>\r\n                    <div className=\"cards\">\r\n                    <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie ? movie.poster_path :\"\"}`} />\r\n                    <div className=\"cards__overlay\">\r\n                        <div className=\"card__title\">{movie ? movie.original_title : \"\"}</div>\r\n                        <div className=\"card__runtime\">\r\n                            {movie ? movie.release_date : \"\"}\r\n                            <span className=\"card__rating\">{movie ? movie.vote_average : \"\"}<i className=\"fas fa-star\" /></span>\r\n                        </div>\r\n                        <div className=\"card__description\">{movie ? movie.overview.slice(0,118)+\"...\" : \"\"}</div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <button onClick={()=>{deleteFavorite(movie.id)}}>Delete Movie</button>\r\n        </div>\r\n                                                ))\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                {currentUser &&\r\n                    <>\r\n                        <p>{`Signed In as ${currentUser.email}`}</p>\r\n                        <button onClick={logout}>Sign Out</button>\r\n                    </>\r\n                }\r\n            </div>\r\n            <div>\r\n                {showFavorites}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Profile","import { Link } from \"react-router-dom\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport './Header.css'\r\nconst Header = ({currentUser}) => {\r\n    // check user info \r\n    console.log(currentUser)\r\n\r\n\r\n    let navigate = useNavigate(); \r\n\r\n    const routeLogin = () =>{ \r\n        let path = `movie/Login`; \r\n        navigate(path);\r\n    }\r\n    const routeProfile = () =>{ \r\n        let path = `movie/Profile`; \r\n        navigate(path);\r\n    }\r\n    return (\r\n        <header className=\"headerContainer\">\r\n            <Link to=\"/\"><span className={\"brand\"}>Moovie The Doobie</span></Link>\r\n            <p>{currentUser? `Welcome, ${currentUser.displayName}` : \"\"}</p>\r\n            {currentUser ? <button onClick={routeProfile}>Profile</button>\r\n                         : <button onClick={routeLogin}>Login</button>}\r\n            \r\n            \r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;\r\n\r\n//my movie fit","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Home from './screens/Home/Home'\r\nimport MovieDetail from './screens/MovieDetail/MovieDetail'\r\nimport Login from './screens/Login/Login'\r\nimport UseAuth from \"./components/UseAuth\";\r\nimport Profile from \"./screens/Profile/Profile\";\r\nimport Header from \"./components/Header/Header\";\r\nfunction App() {\r\n    //pass the user info\r\n    const currentUser = UseAuth()\r\n    return (\r\n        \r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <Header currentUser={currentUser}/>\r\n                    <Routes>\r\n                        <Route exact path=\"MovieReview\" element={<Home/>}></Route>\r\n                        <Route exact path=\"movie/:id\" element={<MovieDetail />}></Route>\r\n                        <Route exact path=\"movie/Profile\" element={<Profile/>}></Route>\r\n                        <Route exact path=\"movie/Login\" element={<Login/>}></Route>\r\n                    </Routes>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}